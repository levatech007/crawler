class Ariregister
  require 'selenium-webdriver'
  require 'csv'

  done = []
  reg_nrs = [12291497,12292172,12292232,12292634,12292634,12292841,12294357,12295414,12295472,12295816,12295940,12296460,12297092,12297212,12298074,12299049,12299501,12300109,12300150,12301043,12301362,12301830,12301847,12302143,12302255,12302278,12302901,12303757,12304679,12305762,12306046,12306081,12306359,12306460,12306603,12306715,12307583,12308192,12308312,12308631,12308714,12308766,12308938,12310102,12311588,12312472,12312561,12312673,12312785,12312963,12313218,12313262,12313514,12314137,12314399,12315393,12315708,12316151,12316375,12316518,12316688,12317015,12317080,12317127,12317908,12318486,12319178,12319468,12319929,12320158,12321362,12322447,12322507,12323412,12325807,12325836,12326014,12326631,12326669,12327143,12327172,12327387,12328384,12328600,12328674,12329165,12329260,12329455,12329573,12329610,12330263,12330464,12330547,12330725,12330850,12330926,12330984,12331044,12332049,12332115,12332186,12332262,12332374,12332428,12333072,12334203,12334278,12334640,12334723,12334835,12335970,12336455,12337012,12337147,12338017,12338036,12338425,12338827,12339347,12339471,12340729,12341019,12341373,12341568,12341798,12342906,12343113,12343461,12344242,12344437,12344680,12344762,12344779,12346790,12346942,12347364,12348104,12348599,12348613,12348961,12349251,12350702,12350811,12350952,12351727,12352804,12352974,12353132,12353382,12353531,12353608,12353896,12354364,12354648,12354967,12355240,12355569,12356239,12356601,12357374,12357664,12357919,12357983,12358037,12358282,12358600,12358853,12358907,12359189,12359232,12360040,12360092,12360146,12360264,12360695,12360867,12361453,12361789,12361803,12361810,12361973,12362576,12363802,12364658,12365267,12365333,12365818,12365936,12366153,12366350,12366382,12366568,12367013,12367088,12367585,12370972,12371090,12371380,12371428,12371753,12372103,12372110,12372244,12372333,12372882,12373344,12373628,12373737,12374295,12374757,12375165,12375521,12376176,12377098,12377394,12378175,12378712,12378821,12379039,12379080,12379571,12380077,12381177,12381734,12381929,12382751,12383615,12383644,12384218,12384603,12385206,12386068,12388305,12388819,12389523,12389629,12390147,12390986,12391158,12391460,12391477,12391997,12392442,12392502,12392815,12392838,12392944,12393002,12393915,12394335,12394369,12394564,12394671,12394702,12394961,12395682,12396032,12396285,12396701,12397698,12397735,12398806,12400609,12401017,12401106,12401141,12401810,12401833,12402152,12402212,12402413,12403237,12403996,12404027,12404062,12404139,12404665,12404895,12405311,12405452,12405825,12405831,12405848,12405995,12406204,12406397,12407155,12407283,12408485,12408568,12409616,12410424,12411272,12411352,12411406,12411843,12411984,12412794,12412819,12413115,12413411,12413983,12414474,12414646,12414965,12415344,12415812,12415893,12416193,12416929,12417018,12417892,12418779,12419023,12421089,12421468,12422657,12422841,12422901,12423102,12423254,12423272,12423533,12424142,12424490,12424834,12425911,12425986,12426098,12426394,12426514,12427181,12427672,12428559,12429292,12429814,12430214,12430295,12430303,12430562,12431366,12431656,12432093,12432302,12433069,12433081,12433218,12433307,12434146,12435520,12435631,12435766,12436010,12436085,12436286,12436323,12436665,12437085,12438291,12438434,12438995,12440000,12440158,12442571,12442677,12442714,12443168,12443955,12444200,12445612,12445813,12445894,12446572,12447025,12447841,12447960,12448088,12448102,12449975,12450085,12450547,12451334,12451759,12452345,12452405,12452687,12452730,12453095,12453310,12454019,12455220,12455547,12456455,12456811,12457704,12458135,12458632,12460043,12460698,12460741,12462036,12462869,12463136,12464443,12464740,12465187,12465201,12465589,12465661,12466525,12467387,12467654,12468033,12468286,12468524,12468636,12468688,12469363,12469630,12470395,12470662,12470863,12471963,12472804,12472974,12472997,12473092,12473459,12474039,12475062,12475317,12475793,12476446,12476558,12477279,12478296,12479137,12479344,12479812,12480749,12481223,12481269,12481312,12481370,12481393,12483009,12483104,12483162,12483363,12483736,12483989,12485043,12485356,12485557,12485563,12485971,12485994,12486516,12486835,12486976,12487326,12487875,12488082,12488231,12488538,12488933,12489093,12489495,12489555,12490044,12490452,12490877,12490887,12491440,12491658,12492221,12492333,12492416,12492534,12492787,12492959,12493083,12493449,12493918,12494220,12494607,12494993,12495123,12496456,12496733,12497299,12497402,12497626,12498672,12498962,12500541,12500771,12501049,12502445,12502505,12502528,12503864,12504065,12504220,12504467,12504800,12505018,12505053,12505107,12505478,12505786,12506578,12507767,12508689,12508956,12509789,12510440,12510539,12510611,12510841,12511480,12511639,12512125,12512188,12512596,12513124,12513271,12513458,12513549,12513845,12514603,12515614,12516996,12517139,12517180,12517275,12517286,12518446,12519730,12522844,12523051,12523178,12524369,12525127,12525624,12528522,12529192,12529390,12530045,12530074,12530298,12530424,12530714,12530826,12530878,12531576,12532222,12532386,12532854,12532959,12533552,12534008,12534296,12534327,12534913,12535095,12535479,12535700,12536208,12537509,12537722,12539081,12540322,12541281,12542203,12543266,12543390,12543533,12544722,12544975,12546112,12546371,12546483,12546649,12546909,12546997,12547169,12547270,12547287,12548464,12548973,12549872,12550177,12551484,12551567,12551604,12551739,12552087,12552294,12552377,12552667,12552727,12554057,12554241,12555648,12556174,12556211,12556375,12557297,12557699,12558532,12558948,12559014,12559451,12559636,12560365,12560388,12561229,12561525,12561904,12562750,12563725,12563837,12564920,12565606,12566110,12566557,12566632,12566729,12566793,12566942,12567120,12567373,12567657,12567663,12568007,12568154,12568252,12568622,12569018,12569291,12569395,12569640,12569662,12570079,12570151,12570211,12570607,12570731,12570961,12571475,12572807,12572960,12573161,12573971,12574002,12574678,12574746,12576018,12576188,12577058,12577319,12577561,12577615,12578187,12578224,12578566,12578684,12579011,12579264,12579947,12580184,12580770,12581255,12582987,12583099,12583567,12584182,12584756,12585253,12585402,12586465,12586809,12586962,12587855,12587885,12588056,12588518,12588990,12589618,12589630,12590202,12590596,12591868,12591911,12592170,12592738,12593465,12594789,12594803,12595501,12596357,12596788,12597015,12597457,12597782,12598020,12598184,12598729,12599093,12599232,12600415,12600633,12600709,12600774,12600900,12600946,12601555,12601578,12601638,12602572,12602968,12603198,12603809,12603991,12604306,12605211,12605336,12605429,12605464,12606185,12606386,12606558,12606854,12607351,12607664,12608089,12608333,12608408,12609462,12609605,12609976,12610761,12610784,12610815,12611045,12611329,12612955,12613110,12613280,12613475,12614090,12614670,12615267,12615404,12615971,12616901,12616947,12618128,12618219,12618231,12620038,12620386,12620765,12620908,12621090,12622132,12623025,12623232,12623870,12624088,12624160,12624250,12626443,12626526,12626590,12626644,12626779,12626992,12627477,12627844,12628169,12629418,12629884,12630769,12631214,12631237,12631993,12632024,12632797,12632834,12633414,12634046,12635005,12635442,12635666,12635838,12636080,12636231,12636743,12638951,12639049,12639411,12640650,12640839,12640845,12641618,12642198,12644004,12644174,12644636,12645127,12645831,12646894,12647327,12647586,12647652,12647926,12648048,12648462,12649125,12649332,12649361,12649415,12649993,12650358,12652096,12652794,12652883,12653109,12654132,12654215,12654712,12654729,12655732,12656183,12656332,12656786,12657123,12657691,12658963,12659201,12659224,12660109,12660173,12660693,12660730,12661089,12663119,12663190,12663349,12664171,12664343,12664366,12664567,12664627,12665615,12665905,12666164,12666556,12667494,12667666,12667873,12667933,12668298,12668393,12668832,12668915,12669240,12669292,12670160,12670622,12671001,12671751,12672182,12672207,12672880,12672911,12672928,12672940,12673537,12673709,12674488,12675237,12675861,12676464,12676799,12677663,12677831,12678368,12678473,12679801,12679936,12685138,12686008,12686161,12686184,12686209,12686296,12686416,12686698,12686853,12686988,12687516,12689900,12690791,12692144,12692247,12692486,12693445,12693652,12693876,12693965,12693994,12694278,12694522,12694841,12696231,12696610,12697222,12697236,12698218,12698477,12698784,12699560,12699608,12699666,12700234,12701280,12701334,12701446,12701713,12702026,12702977,12703178,12705007,12705177,12705711,12705869,12706343,12706780,12706917,12706975,12707041,12708282,12708856,12708909,12709654,12709838,12710221,12710250,12710681,12710698,12710942,12711203,12711290,12711700,12712042,12712191,12712303,12712349,12712384,12712533,12712579,12712674,12712833,12712852,12713461,12713509,12713828,12714265,12714880,12714911,12715052,12715098,12715263,12715879,12716318,12716353,12716554,12716583,12716985,12717068,12717217,12717660,12717766,12717826,12717915,12717973,12718228,12718990,12719311,12719400,12719788,12720188,12721354,12721816,12722098,12722170,12722827,12722922] # lisada registri koodid siia

  p "START: #{Time.now}"

  def self.info_ariregistrist(reg_nr)
    result = Array.new
    # set up Selenium
    options = Selenium::WebDriver::Chrome::Options.new
    options.add_argument('--headless')
    options.add_argument('--no-sandbox')
    driver = Selenium::WebDriver.for :chrome, options: options

    # use <form name="liht" method="POST" action="/lihtparing"> to enter registration number
    driver.get('https://ariregister.rik.ee/lihtparing')
    element = driver.find_element(:name, "rkood")
    element.send_keys(reg_nr)
    element.submit

    # find table row with company information
    driver.find_elements(:xpath => "//table[@class='tbl_listing']/tbody/tr[2]/td").each do |r|
        result << r.text&.gsub(/[\r\n]+/, ' ') # some fields contain \n
    end

    CSV.open("result.csv", "a", {col_sep: ";"}) do |csv|
      csv << result
    end
    # keep track of registration numbers that have been processed
    CSV.open("done.csv", "a", {col_sep: ";"}) do |csv|
      csv << [reg_nr]
    end

    driver.quit

    p result
    # optimal time to avoid captcha
    sleep(rand(100..300))
  end

  reg_nrs.each do |reg_nr|
    begin
      info_ariregistrist(reg_nr) unless done.include?(reg_nr)
    rescue Selenium::WebDriver::Error::NoSuchElementError
      # program ran into captcha
      p "Rescued NoSuchElementError"
      p done
      sleep(rand(250..400))
      next
    end
  end

  p "END: #{Time.now}"
end
